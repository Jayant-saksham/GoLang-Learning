definitions:
  models.Comment:
    properties:
      id:
        type: integer
      post_id:
        type: integer
      text:
        type: string
      user_id:
        type: integer
    type: object
  models.Post:
    properties:
      content:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/comments:
    get:
      description: Get a list of comments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
      summary: Get a list of comments
      tags:
      - Comments
    post:
      consumes:
      - application/json
      description: Create a new comment
      parameters:
      - description: Comment input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Comment created successfully
          schema:
            type: string
      summary: Create a new comment
      tags:
      - Comments
  /api/comments/{id}:
    delete:
      description: Delete a comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Comment deleted successfully
          schema:
            type: string
      summary: Delete a comment by ID
      tags:
      - Comments
    get:
      description: Get a specific comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
      summary: Get a specific comment by ID
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: Update an existing comment by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: Comment updated successfully
          schema:
            type: string
      summary: Update an existing comment by ID
      tags:
      - Comments
  /api/posts:
    get:
      description: Get a list of posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
      summary: Get a list of posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Post created successfully
          schema:
            type: string
      summary: Create a new post
      tags:
      - Posts
  /api/posts/{id}:
    delete:
      description: Delete a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post deleted successfully
          schema:
            type: string
      summary: Delete a post by ID
      tags:
      - Posts
    get:
      description: Get a specific post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Get a specific post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: Update an existing post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: Post updated successfully
          schema:
            type: string
      summary: Update an existing post by ID
      tags:
      - Posts
  /api/users:
    get:
      description: Get a list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get a list of users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
      summary: Create a new user
      tags:
      - Users
  /api/users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
      summary: Delete a user by ID
      tags:
      - Users
    get:
      description: Get a specific user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get a specific user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            type: string
      summary: Update an existing user by ID
      tags:
      - Users
swagger: "2.0"
